{"ast":null,"code":"var _jsxFileName = \"D:\\\\punya bedel\\\\magang berdampak\\\\suitmedia-ideas\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport Controls from \"./components/Controls\";\nimport PostCard from \"./components/PostCard\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"https://suitmedia-backend.suitdev.com/api/ideas\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(() => +localStorage.getItem(\"page\") || 1);\n  const [size, setSize] = useState(() => +localStorage.getItem(\"size\") || 10);\n  const [sort, setSort] = useState(() => localStorage.getItem(\"sort\") || \"-published_at\");\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      // Simpan state ke localStorage agar tidak reset saat refresh\n      localStorage.setItem(\"page\", page);\n      localStorage.setItem(\"size\", size);\n      localStorage.setItem(\"sort\", sort);\n      const url = `${API_BASE}?page[number]=${page}&page[size]=${size}&append[]=small_image&append[]=medium_image&sort=${sort}`;\n      try {\n        const res = await fetch(url, {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        const json = await res.json();\n        if (Array.isArray(json.data)) {\n          setPosts(json.data);\n        } else {\n          setPosts([]);\n        }\n        if (json.meta && typeof json.meta.total === \"number\") {\n          setTotal(json.meta.total);\n        } else {\n          setTotal(0);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setPosts([]);\n        setTotal(0);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [page, size, sort]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      page: page,\n      size: size,\n      sort: sort,\n      total: total,\n      onChangePageSize: value => {\n        setPage(1); // reset ke halaman pertama saat ganti size\n        setSize(value);\n      },\n      onChangeSort: value => {\n        setPage(1); // reset ke halaman pertama saat ganti sort\n        setSort(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"2rem\"\n        },\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post,\n        index: index\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"2rem\"\n        },\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      total: total,\n      size: size,\n      onPageChange: num => setPage(num)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"71hnCJeq9LAxsQwy0CtDo4PRRjw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Banner","Controls","PostCard","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","App","_s","posts","setPosts","page","setPage","localStorage","getItem","size","setSize","sort","setSort","total","setTotal","loading","setLoading","fetchData","setItem","url","res","fetch","headers","Accept","json","Array","isArray","data","meta","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangePageSize","value","onChangeSort","className","style","textAlign","marginTop","length","map","post","index","id","onPageChange","num","_c","$RefreshReg$"],"sources":["D:/punya bedel/magang berdampak/suitmedia-ideas/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Banner from \"./components/Banner\";\r\nimport Controls from \"./components/Controls\";\r\nimport PostCard from \"./components/PostCard\";\r\nimport Pagination from \"./components/Pagination\";\r\n\r\nconst API_BASE = \"https://suitmedia-backend.suitdev.com/api/ideas\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(() => +localStorage.getItem(\"page\") || 1);\r\n  const [size, setSize] = useState(() => +localStorage.getItem(\"size\") || 10);\r\n  const [sort, setSort] = useState(() => localStorage.getItem(\"sort\") || \"-published_at\");\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n\r\n      // Simpan state ke localStorage agar tidak reset saat refresh\r\n      localStorage.setItem(\"page\", page);\r\n      localStorage.setItem(\"size\", size);\r\n      localStorage.setItem(\"sort\", sort);\r\n\r\n      const url = `${API_BASE}?page[number]=${page}&page[size]=${size}&append[]=small_image&append[]=medium_image&sort=${sort}`;\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n        });\r\n\r\n        const json = await res.json();\r\n\r\n        if (Array.isArray(json.data)) {\r\n          setPosts(json.data);\r\n        } else {\r\n          setPosts([]);\r\n        }\r\n\r\n        if (json.meta && typeof json.meta.total === \"number\") {\r\n          setTotal(json.meta.total);\r\n        } else {\r\n          setTotal(0);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setPosts([]);\r\n        setTotal(0);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [page, size, sort]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Banner />\r\n      <Controls\r\n        page={page}\r\n        size={size}\r\n        sort={sort}\r\n        total={total}\r\n        onChangePageSize={(value) => {\r\n          setPage(1); // reset ke halaman pertama saat ganti size\r\n          setSize(value);\r\n        }}\r\n        onChangeSort={(value) => {\r\n          setPage(1); // reset ke halaman pertama saat ganti sort\r\n          setSort(value);\r\n        }}\r\n      />\r\n      <div className=\"post-list\">\r\n        {loading ? (\r\n          <p style={{ textAlign: \"center\", marginTop: \"2rem\" }}>Loading posts...</p>\r\n        ) : posts.length > 0 ? (\r\n          posts.map((post, index) => (\r\n            <PostCard key={post.id} post={post} index={index} />\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", marginTop: \"2rem\" }}>No posts available.</p>\r\n        )}\r\n      </div>\r\n      <Pagination\r\n        page={page}\r\n        total={total}\r\n        size={size}\r\n        onPageChange={(num) => setPage(num)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,QAAQ,GAAG,iDAAiD;AAElE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,MAAM,CAACiB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EAC1E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAACiB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAC3E,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,MAAMiB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC;EACvF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACAT,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEb,IAAI,CAAC;MAClCE,YAAY,CAACW,OAAO,CAAC,MAAM,EAAET,IAAI,CAAC;MAClCF,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEP,IAAI,CAAC;MAElC,MAAMQ,GAAG,GAAG,GAAGnB,QAAQ,iBAAiBK,IAAI,eAAeI,IAAI,oDAAoDE,IAAI,EAAE;MAEzH,IAAI;QACF,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;UAC3BG,OAAO,EAAE;YACPC,MAAM,EAAE;UACV;QACF,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;QAE7B,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;UAC5BvB,QAAQ,CAACoB,IAAI,CAACG,IAAI,CAAC;QACrB,CAAC,MAAM;UACLvB,QAAQ,CAAC,EAAE,CAAC;QACd;QAEA,IAAIoB,IAAI,CAACI,IAAI,IAAI,OAAOJ,IAAI,CAACI,IAAI,CAACf,KAAK,KAAK,QAAQ,EAAE;UACpDC,QAAQ,CAACU,IAAI,CAACI,IAAI,CAACf,KAAK,CAAC;QAC3B,CAAC,MAAM;UACLC,QAAQ,CAAC,CAAC,CAAC;QACb;MACF,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CzB,QAAQ,CAAC,EAAE,CAAC;QACZU,QAAQ,CAAC,CAAC,CAAC;MACb;MAEAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACZ,IAAI,EAAEI,IAAI,EAAEE,IAAI,CAAC,CAAC;EAEtB,oBACEd,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACElC,OAAA,CAACN,MAAM;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtC,OAAA,CAACL,MAAM;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtC,OAAA,CAACJ,QAAQ;MACPY,IAAI,EAAEA,IAAK;MACXI,IAAI,EAAEA,IAAK;MACXE,IAAI,EAAEA,IAAK;MACXE,KAAK,EAAEA,KAAM;MACbuB,gBAAgB,EAAGC,KAAK,IAAK;QAC3B/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACZI,OAAO,CAAC2B,KAAK,CAAC;MAChB,CAAE;MACFC,YAAY,EAAGD,KAAK,IAAK;QACvB/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACZM,OAAO,CAACyB,KAAK,CAAC;MAChB;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFtC,OAAA;MAAK0C,SAAS,EAAC,WAAW;MAAAR,QAAA,EACvBhB,OAAO,gBACNlB,OAAA;QAAG2C,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACxEhC,KAAK,CAACwC,MAAM,GAAG,CAAC,GAClBxC,KAAK,CAACyC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBjD,OAAA,CAACH,QAAQ;QAAemD,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAEA;MAAM,GAAlCD,IAAI,CAACE,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CACpD,CAAC,gBAEFtC,OAAA;QAAG2C,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC7E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNtC,OAAA,CAACF,UAAU;MACTU,IAAI,EAAEA,IAAK;MACXQ,KAAK,EAAEA,KAAM;MACbJ,IAAI,EAAEA,IAAK;MACXuC,YAAY,EAAGC,GAAG,IAAK3C,OAAO,CAAC2C,GAAG;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA,eACF,CAAC;AAEP;AAACjC,EAAA,CAxFQD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}